
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read any profile, but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Any authenticated user can read events.
    // Only designated managers can create or update events.
    match /events/{eventId} {
      allow read: if request.auth != null;
      // Allow create if user is in managerIds list in the new document.
      allow create: if request.auth.uid in request.resource.data.managerIds;
      // Allow update if user was in the managerIds list of the old document.
      allow update: if request.auth.uid in resource.data.managerIds;
    }

    // Any authenticated user can read groups.
    // Only designated admins can update group details.
    match /groups/{groupId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.createdBy;
      allow update: if request.auth.uid in resource.data.adminIds;
    }
    
    // Users can read a family document if they are a member.
    // Admins of a family can update it.
    match /families/{familyId} {
      allow read: if request.auth.uid in resource.data.memberIds;
      allow create: if request.auth.uid == request.resource.data.adminIds[0];
      allow update: if request.auth.uid in resource.data.adminIds;
    }

    // Users can create their own rydz requests.
    // Only the creator can update or cancel their own request.
    match /rydz/{rydId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.requestedBy;
        allow update, delete: if request.auth.uid == resource.data.requestedBy;
    }
    
    // Users can read/write to an activeRyd if they are the driver or a passenger.
    match /activeRydz/{activeRydId} {
        allow read: if request.auth != null && (request.auth.uid == resource.data.driverId || request.auth.uid in resource.data.passengerUids);
        // Let server actions handle the more complex write/update logic
        allow write: if request.auth != null;
    }

    // Users can only read/write their own notifications.
    match /notifications/{notificationId} {
        allow read, write, create: if request.auth.uid == request.resource.data.userId;
    }
  }
}
